<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--开启shiro缓存-->
    <bean class="org.apache.shiro.cache.ehcache.EhCacheManager" id="cacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean>

    <bean class="com.syh.shiro.CustomRolesAuthorizationFilter" name="hasroles"></bean>

    <!-- Realm实现 -->
    <bean id="userRealm" class="com.syh.shiro.UserRealm">
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms" ref="userRealm"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>


    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod"
                  value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>



    <!-- Shiro生命周期处理器
    用于Initializable接口的Shiro实现类初始化和销毁时自动调用
    Initializable.init()和Destroyable.destroy()方法。
    如UserRealm就实现了Initializable，
    而DefaultSecurityManager实现了Destroyable。
    -->
    <bean id="lifecycleBeanPostProcessor"
          class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>



    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!-- 没有登录就重定向的地址 -->
        <property name="loginUrl" value="/login.html"/>
        <property name="unauthorizedUrl" value="/error.html"/>
        <property name="filters">
            <map>
                <entry key="roles" value-ref="hasroles" />
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /js/** = anon
                /css/** = anon
                /fonts/** = anon
                /images/** = anon
                /img/** = anon
                /lib/** = anon
                /login.html = anon
                /error.html = anon
                /user/login.do = anon
                /register.html = anon
                /user/register.do = anon
                /user/loginMsg.do = anon
                /user/findAll.do = authc,roles[test,admin]
                /user/updateUser.do = authc,roles[test,admin]
                /user/findById.do = authc,roles[test,admin]
                /route/deletePro.do = authc,roles[admin]
                /route/deleteManyPro.do = authc,roles[admin]
                /route/findAllRoute.do = authc,roles[admin,test,work]
                /route/saveRoute.do = authc,roles[admin]
                /route/updateRoute.do = authc,roles[admin]
                /order/findAll.do = authc,roles[admin,test,work]
                /order/updateOrder.do = authc,roles[admin,work]
                /order/saveTraveller.do = authc,roles[admin,work]
                /order/deleteTraveller.do = authc,roles[admin,work]
                /role/findAll.do = authc,roles[admin,test]
                /permission/findAll.do = authc,roles[admin,test]
                /role/addPermission.do = authc,roles[admin]
                /role/delPermission.do = authc,roles[admin]
                /user/addRole.do = authc,roles[admin]
                /user/delRole.do = authc,roles[admin]
                /page/index.html = authc,roles[admin,test,work]
                <!--/system/user.action = authc,perms["system:user:list"]
                /system/user/delete.action = authc,perms["system:user:delete"]-->
                /** = authc
            </value>
        </property>
    </bean>

</beans>